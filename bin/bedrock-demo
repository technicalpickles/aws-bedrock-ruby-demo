#!/usr/bin/env ruby

require 'bundler/setup'
require 'thor'
require 'aws-sdk-bedrockruntime'
require 'aws-sdk-bedrock'
require 'json'

class BedrockDemoCLI < Thor

  desc "hello", "Test Bedrock connection with a simple completion"
  def hello
    unless ensure_sso_session
      exit 1
    end

    client = Aws::BedrockRuntime::Client.new
    # Using Claude model
    request = {
      model_id: "anthropic.claude-3-sonnet-20240229-v1:0",
      content_type: "application/json",
      accept: "application/json",
      body: {
        anthropic_version: "bedrock-2023-05-31",
        max_tokens: 100,
        messages: [
          {
            role: "user",
            content: "Say something along the lines of 'hello, world!', but make it weird and interesting. Just say it, without any preamble or explanation."
          }
        ]
      }.to_json
    }

    begin
      response = client.invoke_model_with_response_stream(request)
      response.body.each do |event|
        chunk = JSON.parse(event.bytes)
        if chunk["type"] == "content_block_delta"
          print chunk["delta"]["text"]
        end
      end
      puts # Add newline at the end
    rescue Aws::BedrockRuntime::Errors::ServiceError => e
      puts "Error: #{e.message}"
    end
  end
  private

  def ensure_sso_session
    # Use the base Bedrock client for validation since BedrockRuntime doesn't have list operations
    Aws::Bedrock::Client.new.list_foundation_models
    true
  rescue Aws::Errors::InvalidSSOCredentials
    puts "SSO session expired. Running aws sso login..."
    system('aws sso login')
    if $?.success?
      puts "SSO login successful, retrying operation..."
      true
    else
      puts "SSO login failed. Please run 'aws sso login' manually and try again."
      false
    end
  end
end

BedrockDemoCLI.start(ARGV) 